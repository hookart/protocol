{
  "address": "0xcf8075fa1012697343d0263f6579bf53f7bbdc8c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "instrumentId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "underlyingAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "underlyingTokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "instrumentExpiration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "instrumentStrike",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "transfers",
          "type": "uint256"
        }
      ],
      "name": "tokenURIERC721",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xd54117508132e3ae58d335c4617fb194e8675f2f3fb856763993b9beb2f7cdba",
  "receipt": {
    "to": null,
    "from": "0xf9f6009a5f2511f0c859927e43fc12745dc4426a",
    "contractAddress": "0xcf8075fa1012697343d0263f6579bf53f7bbdc8c",
    "transactionIndex": "0x7",
    "gasUsed": "0xc46d4",
    "logsBloom": "0x
    "blockHash": "0x99b579e577e5af2362bd993f2f7f7e2c395607c07475194f1d0dbda42db0660a",
    "transactionHash": "0x1a32528dcffdb940f531c2c986b691adde9ee150cfc63a97c039bd6e756e39e0",
    "logs": [],
    "blockNumber": "0xbc0190",
    "cumulativeGasUsed": "0x1689de",
    "status": "0x1"
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f9079719c55ec367359fccdad37d4c49",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"instrumentId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"underlyingAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"underlyingTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"instrumentExpiration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"instrumentStrike\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transfers\",\"type\":\"uint256\"}],\"name\":\"tokenURIERC721\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements some ERC721 / for hook instruments.\",\"kind\":\"dev\",\"methods\":{\"tokenURIERC721(uint256,address,uint256,uint256,uint256,uint256)\":{\"details\":\"this is a basic tokenURI based on the loot contract for an ERC721 (ripped off from LOOT PROJECT)\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/TokenURI.sol\":\"TokenURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Base64.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n *\\n * _Available since v4.5._\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n            }\\n\\n            // When data `bytes` is not exactly 3 bytes long\\n            // it is padded with `=` characters at the end\\n            switch mod(mload(data), 3)\\n            case 1 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n                mstore8(sub(resultPtr, 2), 0x3d)\\n            }\\n            case 2 {\\n                mstore8(sub(resultPtr, 1), 0x3d)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5efa2a2ed44af15fd5bec8c43b45cb26fe6cb68671fea151e6afcfed66ed2672\",\"license\":\"MIT\"},\"src/lib/HookStrings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588          \\u2584\\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2584\\u2584         \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588    \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2584    \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c\\n//          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580  \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//           \\u2588\\u2588\\u2588\\u2580   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//            \\u2580\\u2580  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c\\n//              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\u2580\\u2580\\u2580\\u2580\\u2580\\u2580      \\u2584\\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\n//             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580    \\u2584\\u2584\\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\n//            \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580  \\u2588\\u2588\\u2584\\n//          \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580  \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2584\\n//          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580  \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2580\\u2580\\u2580\\u2580\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\u2580\\u2580\\u2580      \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n\\npragma solidity ^0.8.10;\\n\\nlibrary HookStrings {\\n  \\n  /// @dev toAsciiString creates a hex encoding of an\\n  /// address as a string to use in the preview NFT.\\n  function toAsciiString(address x) internal pure returns (string memory) {\\n    bytes memory s = new bytes(40);\\n    for (uint256 i = 0; i < 20; i++) {\\n      bytes1 b = bytes1(uint8(uint256(uint160(x)) / (2**(8 * (19 - i)))));\\n      bytes1 hi = bytes1(uint8(b) / 16);\\n      bytes1 lo = bytes1(uint8(b) - 16 * uint8(hi));\\n      s[2 * i] = char(hi);\\n      s[2 * i + 1] = char(lo);\\n    }\\n    return string(s);\\n  }\\n\\n  function char(bytes1 b) internal pure returns (bytes1 c) {\\n    if (uint8(b) < 10) return bytes1(uint8(b) + 0x30);\\n    else return bytes1(uint8(b) + 0x57);\\n  }\\n\\n  function toString(uint256 value) internal pure returns (string memory) {\\n    // Inspired by OraclizeAPI's implementation - MIT license\\n    // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n    if (value == 0) {\\n      return \\\"0\\\";\\n    }\\n    uint256 temp = value;\\n    uint256 digits;\\n    while (temp != 0) {\\n      digits++;\\n      temp /= 10;\\n    }\\n    bytes memory buffer = new bytes(digits);\\n    while (value != 0) {\\n      digits -= 1;\\n      buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n      value /= 10;\\n    }\\n    return string(buffer);\\n  }\\n}\\n\",\"keccak256\":\"0xc69154618dfff9f36c04845266c16c5774e24c978a06564810e9723971a58b92\",\"license\":\"MIT\"},\"src/lib/TokenURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588          \\u2584\\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2584\\u2584         \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588    \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2584    \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c\\n//          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580  \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//           \\u2588\\u2588\\u2588\\u2580   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//            \\u2580\\u2580  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c\\n//              \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\u2580\\u2580\\u2580\\u2580\\u2580\\u2580      \\u2584\\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\n//             \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580    \\u2584\\u2584\\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\n//            \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580  \\u2588\\u2588\\u2584\\n//          \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580  \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2584\\n//          \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580  \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//         \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580   \\u2584\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2590\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c     \\u2580\\u2580\\u2580\\u2580\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2580\\u2580\\u2580\\u2580      \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n//        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u258c                                        \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\n\\npragma solidity ^0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/utils/Base64.sol\\\";\\n\\nimport \\\"./HookStrings.sol\\\";\\n\\n/// @dev This contract implements some ERC721 / for hook instruments.\\nlibrary TokenURI {\\n  function _generateMetadataERC721(\\n    address underlyingTokenAddress,\\n    uint256 underlyingTokenId,\\n    uint256 instrumentStrikePrice,\\n    uint256 instrumentExpiration,\\n    uint256 transfers\\n  ) internal pure returns (string memory) {\\n    return\\n      string(\\n        abi.encodePacked(\\n          ', \\\"expiration\\\": ',\\n          HookStrings.toString(instrumentExpiration),\\n          ', \\\"underlying_address\\\": ',\\n          HookStrings.toAsciiString(underlyingTokenAddress),\\n          ', \\\"underlying_tokenId\\\": ',\\n          HookStrings.toString(underlyingTokenId),\\n          ', \\\"strike_price\\\": ',\\n          HookStrings.toString(instrumentStrikePrice),\\n          ', \\\"transfer_index\\\": ',\\n          HookStrings.toString(transfers)\\n        )\\n      );\\n  }\\n\\n  /// @dev this is a basic tokenURI based on the loot contract for an ERC721\\n  /// (ripped off from LOOT PROJECT)\\n  function tokenURIERC721(\\n    uint256 instrumentId,\\n    address underlyingAddress,\\n    uint256 underlyingTokenId,\\n    uint256 instrumentExpiration,\\n    uint256 instrumentStrike,\\n    uint256 transfers\\n  ) public pure returns (string memory) {\\n    string[5] memory parts;\\n    parts[\\n      0\\n    ] = '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" preserveAspectRatio=\\\"xMinYMin meet\\\" viewBox=\\\"0 0 350 350\\\"><style>'\\n    '.base { fill: white; font-family: serif; font-size: 14px; }</style><rect width=\\\"100%\\\" height=\\\"100%\\\" fill='\\n    '\\\"black\\\" /><text x=\\\"10\\\" y=\\\"20\\\" class=\\\"base\\\">';\\n\\n    parts[1] = HookStrings.toAsciiString(underlyingAddress);\\n\\n    parts[2] = '</text><text x=\\\"10\\\" y=\\\"40\\\" class=\\\"base\\\">';\\n\\n    parts[3] = HookStrings.toString(underlyingTokenId);\\n\\n    parts[4] = \\\"</text></svg>\\\";\\n\\n    string memory output = string(\\n      abi.encodePacked(parts[0], parts[1], parts[2], parts[3], parts[4])\\n    );\\n\\n    string memory json = Base64.encode(\\n      bytes(\\n        string(\\n          abi.encodePacked(\\n            '{\\\"name\\\": \\\"Option Id',\\n            HookStrings.toString(instrumentId),\\n            '\\\", \\\"description\\\": \\\"Hook is the on-chain covered call option protocol\\\", \\\"image\\\": '\\n            '\\\"data:image/svg+xml;base64,',\\n            Base64.encode(bytes(output)),\\n            _generateMetadataERC721(\\n              underlyingAddress,\\n              underlyingTokenId,\\n              instrumentStrike,\\n              instrumentExpiration,\\n              transfers\\n            ),\\n            '\\\"}'\\n          )\\n        )\\n      )\\n    );\\n    output = string(abi.encodePacked(\\\"data:application/json;base64,\\\", json));\\n\\n    return output;\\n  }\\n}\\n\",\"keccak256\":\"0x9fe341b295abaa0154ba15c33a3c571abc3702f7eaab8acb2b8e61556b0216e9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x610d9661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80635b9031521461003a575b600080fd5b61004d610048366004610603565b610063565b60405161005a919061068f565b60405180910390f35b606061006d6105dc565b60405180610120016040528060fd8152602001610bfc60fd91398152610092876101a8565b8160016020020181905250604051806060016040528060288152602001610d396028913960408201526100c4866102ef565b60608201908152604080518082018252600d81526c1e17ba32bc3a1f1e17b9bb339f60991b60208083019190915260808501829052845181860151848701519551945160009661011c969395929490939291016106d8565b6040516020818303038152906040529050600061017761013b8b6102ef565b610144846103f5565b6101518c8c8b8d8c610549565b60405160200161016393929190610743565b6040516020818303038152906040526103f5565b90508060405160200161018a9190610841565b60408051808303601f190181529190529a9950505050505050505050565b60408051602880825260608281019093526000919060208201818036833701905050905060005b60148110156102e85760006101e58260136108b2565b6101f09060086108c9565b6101fb9060026109ce565b61020e906001600160a01b0387166109f7565b60f81b9050600060108260f81c6102259190610a0b565b60f81b905060008160f81c601061023c9190610a2d565b8360f81c61024a9190610a4e565b60f81b9050610258826105a6565b856102648660026108c9565b81518110610274576102746106c2565b60200101906001600160f81b031916908160001a905350610294816105a6565b856102a08660026108c9565b6102ab906001610a71565b815181106102bb576102bb6106c2565b60200101906001600160f81b031916908160001a90535050505080806102e090610a89565b9150506101cf565b5092915050565b6060816103135750506040805180820190915260018152600360fc1b602082015290565b8160005b811561033d578061032781610a89565b91506103369050600a836109f7565b9150610317565b60008167ffffffffffffffff81111561035857610358610886565b6040519080825280601f01601f191660200182016040528015610382576020820181803683370190505b5090505b84156103ed576103976001836108b2565b91506103a4600a86610aa4565b6103af906030610a71565b60f81b8183815181106103c4576103c46106c2565b60200101906001600160f81b031916908160001a9053506103e6600a866109f7565b9450610386565b949350505050565b606081516000141561041557505060408051602081019091526000815290565b6000604051806060016040528060408152602001610cf960409139905060006003845160026104449190610a71565b61044e91906109f7565b6104599060046108c9565b67ffffffffffffffff81111561047157610471610886565b6040519080825280601f01601f19166020018201604052801561049b576020820181803683370190505b509050600182016020820185865187015b80821015610507576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f81168501518453506001830192506104ac565b505060038651066001811461052357600281146105365761053e565b603d6001830353603d600283035361053e565b603d60018303535b509195945050505050565b6060610554836102ef565b61055d876101a8565b610566876102ef565b61056f876102ef565b610578866102ef565b60405160200161058c959493929190610ab8565b604051602081830303815290604052905095945050505050565b6000600a60f883901c10156105cd576105c460f883901c6030610bd6565b60f81b92915050565b6105c460f883901c6057610bd6565b6040518060a001604052806005905b60608152602001906001900390816105eb5790505090565b60008060008060008060c0878903121561061c57600080fd5b8635955060208701356001600160a01b038116811461063a57600080fd5b95989597505050506040840135936060810135936080820135935060a0909101359150565b60005b8381101561067a578181015183820152602001610662565b83811115610689576000848401525b50505050565b60208152600082518060208401526106ae81604085016020870161065f565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b600086516106ea818460208b0161065f565b8651908301906106fe818360208b0161065f565b8651910190610711818360208a0161065f565b855191019061072481836020890161065f565b845191019061073781836020880161065f565b01979650505050505050565b721ec89b985b59488e880893dc1d1a5bdb881259606a1b8152835160009061077281601385016020890161065f565b7f222c20226465736372697074696f6e223a2022486f6f6b20697320746865206f6013918401918201527f6e2d636861696e20636f76657265642063616c6c206f7074696f6e2070726f7460338201527f6f636f6c222c2022696d616765223a2022646174613a696d6167652f7376672b60538201526a1e1b5b0ed8985cd94d8d0b60aa1b6073820152845161080f81607e84016020890161065f565b845191019061082581607e84016020880161065f565b61227d60f01b607e929091019182015260800195945050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161087981601d85016020870161065f565b91909101601d0192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156108c4576108c461089c565b500390565b60008160001904831182151516156108e3576108e361089c565b500290565b600181815b808511156109235781600019048211156109095761090961089c565b8085161561091657918102915b93841c93908002906108ed565b509250929050565b60008261093a575060016109c8565b81610947575060006109c8565b816001811461095d576002811461096757610983565b60019150506109c8565b60ff8411156109785761097861089c565b50506001821b6109c8565b5060208310610133831016604e8410600b84101617156109a6575081810a6109c8565b6109b083836108e8565b80600019048211156109c4576109c461089c565b0290505b92915050565b60006109da838361092b565b9392505050565b634e487b7160e01b600052601260045260246000fd5b600082610a0657610a066109e1565b500490565b600060ff831680610a1e57610a1e6109e1565b8060ff84160491505092915050565b600060ff821660ff84168160ff04811182151516156109c4576109c461089c565b600060ff821660ff841680821015610a6857610a6861089c565b90039392505050565b60008219821115610a8457610a8461089c565b500190565b6000600019821415610a9d57610a9d61089c565b5060010190565b600082610ab357610ab36109e1565b500690565b6f016101132bc3834b930ba34b7b7111d160851b81528551600090610ae4816010850160208b0161065f565b7f2c2022756e6465726c79696e675f61646472657373223a2000000000000000006010918401918201528651610b21816028840160208b0161065f565b7f2c2022756e6465726c79696e675f746f6b656e4964223a200000000000000000602892909101918201528551610b5f816040840160208a0161065f565b71016101139ba3934b5b2afb83934b1b2911d160751b604092909101918201528451610b9281605284016020890161065f565b7301610113a3930b739b332b92fb4b73232bc111d160651b605292909101918201528351610bc781606684016020880161065f565b01606601979650505050505050565b600060ff821660ff84168060ff03821115610bf357610bf361089c565b01939250505056fe3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722207072657365727665417370656374526174696f3d22784d696e594d696e206d656574222076696577426f783d223020302033353020333530223e3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20313470783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420783d2231302220793d2232302220636c6173733d2262617365223e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f3c2f746578743e3c7465787420783d2231302220793d2234302220636c6173733d2262617365223ea2646970667358221220eb6c89610469e5f498e000bc842eed1be917becb15738368d4139c77a717efad64736f6c634300080a0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80635b9031521461003a575b600080fd5b61004d610048366004610603565b610063565b60405161005a919061068f565b60405180910390f35b606061006d6105dc565b60405180610120016040528060fd8152602001610bfc60fd91398152610092876101a8565b8160016020020181905250604051806060016040528060288152602001610d396028913960408201526100c4866102ef565b60608201908152604080518082018252600d81526c1e17ba32bc3a1f1e17b9bb339f60991b60208083019190915260808501829052845181860151848701519551945160009661011c969395929490939291016106d8565b6040516020818303038152906040529050600061017761013b8b6102ef565b610144846103f5565b6101518c8c8b8d8c610549565b60405160200161016393929190610743565b6040516020818303038152906040526103f5565b90508060405160200161018a9190610841565b60408051808303601f190181529190529a9950505050505050505050565b60408051602880825260608281019093526000919060208201818036833701905050905060005b60148110156102e85760006101e58260136108b2565b6101f09060086108c9565b6101fb9060026109ce565b61020e906001600160a01b0387166109f7565b60f81b9050600060108260f81c6102259190610a0b565b60f81b905060008160f81c601061023c9190610a2d565b8360f81c61024a9190610a4e565b60f81b9050610258826105a6565b856102648660026108c9565b81518110610274576102746106c2565b60200101906001600160f81b031916908160001a905350610294816105a6565b856102a08660026108c9565b6102ab906001610a71565b815181106102bb576102bb6106c2565b60200101906001600160f81b031916908160001a90535050505080806102e090610a89565b9150506101cf565b5092915050565b6060816103135750506040805180820190915260018152600360fc1b602082015290565b8160005b811561033d578061032781610a89565b91506103369050600a836109f7565b9150610317565b60008167ffffffffffffffff81111561035857610358610886565b6040519080825280601f01601f191660200182016040528015610382576020820181803683370190505b5090505b84156103ed576103976001836108b2565b91506103a4600a86610aa4565b6103af906030610a71565b60f81b8183815181106103c4576103c46106c2565b60200101906001600160f81b031916908160001a9053506103e6600a866109f7565b9450610386565b949350505050565b606081516000141561041557505060408051602081019091526000815290565b6000604051806060016040528060408152602001610cf960409139905060006003845160026104449190610a71565b61044e91906109f7565b6104599060046108c9565b67ffffffffffffffff81111561047157610471610886565b6040519080825280601f01601f19166020018201604052801561049b576020820181803683370190505b509050600182016020820185865187015b80821015610507576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f81168501518453506001830192506104ac565b505060038651066001811461052357600281146105365761053e565b603d6001830353603d600283035361053e565b603d60018303535b509195945050505050565b6060610554836102ef565b61055d876101a8565b610566876102ef565b61056f876102ef565b610578866102ef565b60405160200161058c959493929190610ab8565b604051602081830303815290604052905095945050505050565b6000600a60f883901c10156105cd576105c460f883901c6030610bd6565b60f81b92915050565b6105c460f883901c6057610bd6565b6040518060a001604052806005905b60608152602001906001900390816105eb5790505090565b60008060008060008060c0878903121561061c57600080fd5b8635955060208701356001600160a01b038116811461063a57600080fd5b95989597505050506040840135936060810135936080820135935060a0909101359150565b60005b8381101561067a578181015183820152602001610662565b83811115610689576000848401525b50505050565b60208152600082518060208401526106ae81604085016020870161065f565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b600086516106ea818460208b0161065f565b8651908301906106fe818360208b0161065f565b8651910190610711818360208a0161065f565b855191019061072481836020890161065f565b845191019061073781836020880161065f565b01979650505050505050565b721ec89b985b59488e880893dc1d1a5bdb881259606a1b8152835160009061077281601385016020890161065f565b7f222c20226465736372697074696f6e223a2022486f6f6b20697320746865206f6013918401918201527f6e2d636861696e20636f76657265642063616c6c206f7074696f6e2070726f7460338201527f6f636f6c222c2022696d616765223a2022646174613a696d6167652f7376672b60538201526a1e1b5b0ed8985cd94d8d0b60aa1b6073820152845161080f81607e84016020890161065f565b845191019061082581607e84016020880161065f565b61227d60f01b607e929091019182015260800195945050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161087981601d85016020870161065f565b91909101601d0192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156108c4576108c461089c565b500390565b60008160001904831182151516156108e3576108e361089c565b500290565b600181815b808511156109235781600019048211156109095761090961089c565b8085161561091657918102915b93841c93908002906108ed565b509250929050565b60008261093a575060016109c8565b81610947575060006109c8565b816001811461095d576002811461096757610983565b60019150506109c8565b60ff8411156109785761097861089c565b50506001821b6109c8565b5060208310610133831016604e8410600b84101617156109a6575081810a6109c8565b6109b083836108e8565b80600019048211156109c4576109c461089c565b0290505b92915050565b60006109da838361092b565b9392505050565b634e487b7160e01b600052601260045260246000fd5b600082610a0657610a066109e1565b500490565b600060ff831680610a1e57610a1e6109e1565b8060ff84160491505092915050565b600060ff821660ff84168160ff04811182151516156109c4576109c461089c565b600060ff821660ff841680821015610a6857610a6861089c565b90039392505050565b60008219821115610a8457610a8461089c565b500190565b6000600019821415610a9d57610a9d61089c565b5060010190565b600082610ab357610ab36109e1565b500690565b6f016101132bc3834b930ba34b7b7111d160851b81528551600090610ae4816010850160208b0161065f565b7f2c2022756e6465726c79696e675f61646472657373223a2000000000000000006010918401918201528651610b21816028840160208b0161065f565b7f2c2022756e6465726c79696e675f746f6b656e4964223a200000000000000000602892909101918201528551610b5f816040840160208a0161065f565b71016101139ba3934b5b2afb83934b1b2911d160751b604092909101918201528451610b9281605284016020890161065f565b7301610113a3930b739b332b92fb4b73232bc111d160651b605292909101918201528351610bc781606684016020880161065f565b01606601979650505050505050565b600060ff821660ff84168060ff03821115610bf357610bf361089c565b01939250505056fe3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f73766722207072657365727665417370656374526174696f3d22784d696e594d696e206d656574222076696577426f783d223020302033353020333530223e3c7374796c653e2e62617365207b2066696c6c3a2077686974653b20666f6e742d66616d696c793a2073657269663b20666f6e742d73697a653a20313470783b207d3c2f7374796c653e3c726563742077696474683d223130302522206865696768743d2231303025222066696c6c3d22626c61636b22202f3e3c7465787420783d2231302220793d2232302220636c6173733d2262617365223e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f3c2f746578743e3c7465787420783d2231302220793d2234302220636c6173733d2262617365223ea2646970667358221220eb6c89610469e5f498e000bc842eed1be917becb15738368d4139c77a717efad64736f6c634300080a0033",
  "devdoc": {
    "details": "This contract implements some ERC721 / for hook instruments.",
    "kind": "dev",
    "methods": {
      "tokenURIERC721(uint256,address,uint256,uint256,uint256,uint256)": {
        "details": "this is a basic tokenURI based on the loot contract for an ERC721 (ripped off from LOOT PROJECT)"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}